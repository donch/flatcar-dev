name: Docker Image CI

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flatcar_track: ['stable']
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DH_LOGIN }}
      DOCKER_HUB_REPO: 'flatcar-dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download and Convert Flatcar Developer Container
        run: |
          echo "=========================== Check ==========================="
          curl https://${{matrix.flatcar_track}}.release.flatcar-linux.net/amd64-usr/current/version.txt -o version.txt
          cat version.txt
          export $(cat version.txt | xargs)
          if [ "${{github.event_name}}" != "workflow_dispatch" ]; then
            curl -s https://hub.docker.com/v2/repositories/${DOCKER_HUB_USERNAME}/${DOCKER_HUB_REPO}/tags/?page_size=10000 |
            jq -e "[.results | .[] | .name == \"${FLATCAR_VERSION}\"] | any | not" || (echo "Tag '${FLATCAR_VERSION}' already exists" && exit 0);
          fi

          echo "=========================== Download Developer Container ==========================="
          curl -L https://${{matrix.flatcar_track}}.release.flatcar-linux.net/amd64-usr/${FLATCAR_VERSION}/flatcar_developer_container.bin.bz2 -o flatcar_developer_container.bin.bz2
          bunzip2 -k flatcar_developer_container.bin.bz2
          mkdir ${FLATCAR_VERSION}
          sudo mount -o ro,loop,offset=2097152 flatcar_developer_container.bin ${FLATCAR_VERSION}
          sudo tar -cp --one-file-system -C ${FLATCAR_VERSION} . | docker import - ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_REPO}:${FLATCAR_VERSION}
          rm -rf flatcar_developer_container.bin flatcar_developer_container.bin.bz2

          echo "=========================== Push Image ==========================="
          docker login -u="analogj" -p="${{ secrets.DH_PASSWORD }}"
          docker push ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_REPO}:${FLATCAR_VERSION}